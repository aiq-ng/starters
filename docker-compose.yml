services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: starters-app
    ports:
      - "9090:9090"
      - "9080:9080"
    volumes:
      - ./:/workspace/starters/app
    environment:
      - PORT=9090
    env_file:
      - .env
    networks:
      - starters-network
    depends_on:
      - postgres
    restart: always

  websocket:
    build:
      context: .
      dockerfile: docker/Dockerfile.websocket
    container_name: starters-ws
    ports:
      - "9091:9091"
    volumes:
      - ./websocket:/workspace/starters/websocket
    environment:
      - PORT=9091
    env_file:
      - websocket/.env
    networks:
      - starters-network
    restart: always

  postgres:
    image: postgres:latest
    container_name: starters-db
    restart: always
    ports:
      - "9092:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql
      - ./schema/triggers.sql:/docker-entrypoint-initdb.d/02-triggers.sql
      - ./schema/init-data.sql:/docker-entrypoint-initdb.d/03-init-data.sql
    networks:
      - starters-network

  redis:
    image: redis:latest
    container_name: starters-redis
    ports:
      - "6389:6379"
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_MAXMEMORY: ${REDIS_MAXMEMORY}
      REDIS_MAXCLIENTS: ${REDIS_MAXCLIENTS}
    command: >
      sh -c "redis-server --requirepass ${REDIS_PASSWORD}
      --maxmemory ${REDIS_MAXMEMORY}
      --maxclients ${REDIS_MAXCLIENTS}
      --maxmemory-policy ${REDIS_MAXMEMORY_POLICY}"
    volumes:
      - redis_data:/data
      - ./docker/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - starters-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "hordunsecret", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s


  caddy:
    image: caddy:latest
    container_name: starters-caddy
    profiles:
      - dev
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./:/workspace/starters/app
    depends_on:
      - app
    networks:
      - starters-network

networks:
  starters-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
