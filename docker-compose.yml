services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    ports:
      - "${PHP_PORT:-9090}:9090"
      - "${PHP_FPM_PORT:-9000}:9000"
    volumes:
      - ./:/workspace/starters/app
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - .env
      - profiles/${ENV:-dev}/.env.app
    networks:
      - starters-network
    depends_on:
      - database
    restart: always

  websocket:
    build:
      context: .
      dockerfile: docker/Dockerfile.websocket
    ports:
      - "${WS_PORT:-9091}:9091"
    volumes:
      - ./websocket:/workspace/starters/websocket
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - websocket/profiles/${ENV:-dev}/.env.app
    networks:
      - starters-network
    restart: always

  database:
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT:-5430}:5432"
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - profiles/${ENV:-dev}/.env.database
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql
      - ./schema/triggers.sql:/docker-entrypoint-initdb.d/02-triggers.sql
      - ./schema/init-data.sql:/docker-entrypoint-initdb.d/03-init-data.sql
      - ./schema/${ENV:-dev}-dump.sql:/docker-entrypoint-initdb.d/04-${ENV:-dev}-dump.sql
    command: postgres -c log_min_messages=notice -c logging_collector=off -c log_destination=stderr
    networks:
      - starters-network

  liquibase:
    build:
      context: .
      dockerfile: docker/Dockerfile.liquibase
    environment:
      - ENV=${ENV:-dev}
    env_file:
      - profiles/${ENV:-dev}/.env.liquibase
    volumes:
      # run in local => mkdir -p ./docker/config/liquibase/changelog && sudo chmod -R 777 ./docker/config/liquibase/changelog
      - ./docker/config/liquibase/changelog:/liquibase/changelog
      - ./docker/config/liquibase/liquibase.properties:/liquibase/liquibase.properties:ro
      - ./schema:/liquibase/schema:ro
    depends_on:
      - database
    command:
      - sh
      - -c
      - |
        migrate &&
        tail -f /dev/null
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "liquibase status --verbose"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "90k"
        max-file: "5"
    networks:
      - starters-network

  redis:
    image: redis:latest
    profiles: ["dev"]
    ports:
      - "6389:6379"
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_MAXMEMORY: ${REDIS_MAXMEMORY}
      REDIS_MAXCLIENTS: ${REDIS_MAXCLIENTS}
    command: >
      sh -c "redis-server --requirepass ${REDIS_PASSWORD}
      --maxmemory ${REDIS_MAXMEMORY}
      --maxclients ${REDIS_MAXCLIENTS}
      --maxmemory-policy ${REDIS_MAXMEMORY_POLICY}"
    volumes:
      - redis_data:/data
      - ./docker/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - starters-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "hordunsecret", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  web:
    image: nginx:latest
    profiles: ["dev"]
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./docker/config/nginx/starters.conf:/etc/nginx/conf.d/default.conf
      - .:/workspace/starters/app
      - ./docker/nginx/certs:/etc/nginx/certs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - starters-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    depends_on:
      - app
      - database

networks:
  starters-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
